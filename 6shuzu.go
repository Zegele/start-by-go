package main

import (
	"fmt"
)

func main() {
	var a [2]int //长度为2（有两个元素）的int型数组。
	a[0] = 1     //给a数组的第1个元素赋值
	fmt.Println(a)

	var b [2]int
	a = b //可以==或！=，前提元素数一样，元素类型一样，才能比较。元素数量也是数组类型的一部分
	fmt.Println(b)

	c := [4]string{"O", "K"} //大括号可以输入数组元素的值，逗号隔开
	fmt.Println(c)           //最后两个是 空字符串，没有赋值，默认的

	d := [2]int{1} //未赋值的为默认的0值
	fmt.Println(d)

	f := [...]int{18: 2, 19: 1} //...表示自动满足元素个数；18:2 表示第19个元素的值是2，元素之间记得逗号隔开
	fmt.Println(f)              //18:2这叫索引

	//指向数组的指针（理解为取数组的地址？）（输出有值）
	var p *[20]int = &f //定义p是指针（*），同时p也是数组，然后取f（&f)的地址。
	fmt.Println(p)      //打印出来的结果也是代&符号的。表示p是取f这样一个数组的地址。

	//指针数组（输出无值，只有地址作为元素的数组）
	x, y, z := 1, 2, 3
	q := [...]*int{&x, &y, &z}
	// *int：表示q保存的元素是指向int型的指针，
	//&x, &y, &z取它们的值
	fmt.Println(q) //输出变量xyz的地址，保存里三个指针，并没有保存它们的值本身。

	//new关键字创建数组，但它可以编辑元素值。
	r := new([10]int) //new创建数组，返回的也是指向数组的指针。
	r[1] = 2          //给指向数组的指针r的第2个元素赋值
	r[9] = 2
	fmt.Println(r)

	//多维数组
	s := [3][4]int{ //表示该数组有三个，元素为4位的数组
		{1, 1, 1, 1},
		{2, 2, 2, 2}} //大括号必须跟在后面
	//第三个数组默认了
	fmt.Println(s)

	t := [3][5]int{ //表示该数组有三个，元素为4位的数组
		//一级数组可以用... ， 但二级不能用...。
		//最好两级都指定
		{1: 2, 3, 4},
		{2, 3, 4, 5}} //大括号必须跟在后面
	//第三个数组默认了
	fmt.Println(t)
}
